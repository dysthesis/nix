#+title: AGS configurations
#+auto_tangle:y

* The =config.js=
AGS will always read off of any =config.js= file located in the configuration directory (=~/.config/ags= normally, but by the power of Home-manager, we have it in this directory). We can achieve modularity in our configurations by leveraging JavaScript's importing capabilities, which allows you to import objects exported by other files.

Therefore, our main =config.js= will simply verify whether or not the version of AGS currently installed is the same as what is expected for this configuration. This is what [[https://github.com/Aylur/dotfiles/blob/main/ags/config.js][Aylur does]], and I'm assuming this is done to avoid unexpected behaviours due to the fact that AGS is still in its beta.

#+begin_src js :tangle config.js
import { readFile } from 'resource:///com/github/Aylur/ags/utils.js';
import App from 'resource:///com/github/Aylur/ags/app.js';
const pkgjson = JSON.parse(readFile(App.configDir + '/package.json'));

const v = {
    ags: `v${pkg.version}`,
    expected: `v${pkgjson.version}`,
};

function mismatch() {
    print(`my config expects ${v.expected}, but your ags is ${v.ags}`);
    App.connect('config-parsed', app => app.Quit());
    return {};
}

export default v.ags === v.expected
    ? (await import('./js/main.js')).default
    : mismatch();
#+end_src

We then write our =package.json=, which contains some metadata on this configuration:
#+begin_src json :tangle package.json
{
  "name": "ags-configuration",
  "version": "1.5.5",
  "description": "My configuration files for AGS",
  "main": "config.js",
  "scripts": {
    "lint": "eslint . --fix",
    "stylelint": "stylelint ./scss --fix"
  },
  "repository": {
    "type": "git",
    "url": "git+https://codeberg.org/dysthesis/nix.git"
  },
  "author": "Dysthesis",
  "homepage": "https://codeberg.org/dysthesis/nix",
}
#+end_src


* Structure
** JS
Contains the JavaScript files that are the skeleton of the AGS widgets.

*** Configurations
This directory contains the configurations for the widgets. Modifying the files here should largely suffice to change the widgets as desired.

These configurations can be found [[file:./js/config/README.org][here]].

*** Windows
This directory contains the different windows. As of right now, the following windows are available:

- [[file:./js/windows/bar/README.org][Bar]]
- [[file:./js/windows/osd/README.org][On-screen display]]
- [[./js/windows/dashboard/README.org][Dashboard]]
- [[./js/windows/lockscreen/README.org][Lock screen]]
- [[file:./js/windows/powermenu/README.org][Power menu]]

*** Utilities
Tools to make life easier.

- [[file:./js/utils/org-agenda/README.org][Org-agenda parser]]

** SCSS
Contains stylesheets to make AGS look nicer.
